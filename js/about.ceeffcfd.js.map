{"version":3,"file":"js/about.ceeffcfd.js","mappings":"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","sources":["webpack://batalhadospensadores/./src/views/Battle.vue","webpack://batalhadospensadores/./src/game/core/state.js","webpack://batalhadospensadores/./src/game/core/entity.js","webpack://batalhadospensadores/./src/game/core/rules.js","webpack://batalhadospensadores/./src/game/core/utils.js","webpack://batalhadospensadores/./src/game/core/components.js","webpack://batalhadospensadores/./src/game/core/compositions.js","webpack://batalhadospensadores/./src/game/core/systems.js","webpack://batalhadospensadores/./src/game/core/game.js","webpack://batalhadospensadores/./src/game/index.js","webpack://batalhadospensadores/./src/views/Battle.vue?f16e","webpack://batalhadospensadores/./src/views/Shop.vue","webpack://batalhadospensadores/./src/components/TeamCards.vue","webpack://batalhadospensadores/./src/components/TeamCards.vue?e34e","webpack://batalhadospensadores/./src/components/ShopBox.vue","webpack://batalhadospensadores/./src/components/ShopBox.vue?baee","webpack://batalhadospensadores/./src/components/LogBox.vue","webpack://batalhadospensadores/./src/components/LogBox.vue?f5e5","webpack://batalhadospensadores/./src/components/EnemyContainer.vue","webpack://batalhadospensadores/./src/components/EnemyContainer.vue?4ae3","webpack://batalhadospensadores/./src/views/Shop.vue?24b4","webpack://batalhadospensadores/./src/assets/ sync ^\\.\\/.*\\.png$"],"sourcesContent":["<template>\n  <div class=\"battle\">\n    <div>\n        <canvas id=\"canvas\" width=\"600\" height=\"400\"></canvas>\n        <br>\n        <button ref=\"start\" @click=\"start\">START</button>\n        <button ref=\"pause\" @click=\"pause\">PAUSE</button>\n        <button ref=\"reset\" @click=\"reset\">RESET</button>\n        </div>\n  </div>\n</template>\n\n<script>\nimport ECS from '../game'\nimport { mapState } from \"vuex\";\n\n\nexport default {\n  mounted() {\n    ECS.State.playerCIDs = this.time.map((e)=>e.cid)\n    if (ECS.State.autoStart) {\n      this.$refs.reset.click()\n      this.$refs.start.click()\n    }\n  },\n  computed: {\n    ...mapState(\"game\", [\"time\"]),\n  },\n  methods: {\n    start() {\n        ECS.Game.start()\n    },\n    pause() {\n        ECS.Game.pause()\n    },\n    reset() {\n        ECS.Game.reset()\n    },\n  },\n}\n</script>\n\n<style scoped>\nbody {\n  background-color: #AAAAAA;\n}\ncanvas {\n  border: 4px solid #000000;\n  background-color: #FFFFFF\n}\n</style>","/*****************/\n/***** State *****/\n/*****************/\nconst State = {\n    isStarted: false,\n    isPause: false,\n    isGameOver: false,\n    player: {},\n    playerCIDs: [],\n    interval: null,\n    maxEnemies: 10,\n    entities: {},\n    autoStart: true, \n    lastDebugTimestamp: null,\n}\n\nexport default State","/******************/\n/***** ENTITY *****/\n/******************/\nconst Entity = function Entity() {\n    // Generate a pseudo random ID\n    this.id = (+new Date()).toString(16) +\n        (Math.random() * 100000000 | 0).toString(16) +\n        Entity.prototype._count;\n\n    // increment counter\n    Entity.prototype._count++;\n\n    // The component data will live in this object\n    this.components = {};\n\n    return this;\n};\n// keep track of entities created\nEntity.prototype._count = 0;\nEntity.prototype.addComponent = function addComponent(component) {\n    // Add component data to the entity\n    // NOTE: The component must have a name property (which is defined as \n    // a prototype protoype of a component function)\n    this.components[component.name] = component;\n    return this;\n};\nEntity.prototype.removeComponent = function removeComponent(componentName) {\n    // Remove component data by removing the reference to it.\n    // Allows either a component function or a string of a component name to be\n    // passed in\n    var name = componentName; // assume a string was passed in\n\n    if (typeof componentName === 'function') {\n        // get the name from the prototype of the passed component function\n        name = componentName.prototype.name;\n    }\n\n    // Remove component data by removing the reference to it\n    delete this.components[name];\n    return this;\n};\nEntity.prototype.print = function print() {\n    // Function to print / log information about the entity\n    console.log(JSON.stringify(this, null, 4));\n    return this;\n};\n\nexport default Entity","\nconst Rules = {\n    Cards: {\n        unite: {\n            name: \"unite\",\n            flavor: \"Filósofos do mundo, Uni-vos!! Marx buffa o ataque do time em 2\",\n            description: \"tornado: agrupa oponentes dentro da area para o centro\",\n            cooldown: 4000,\n        },\n        squid: {\n            name: \"squid\",\n            flavor: \"lula 2022\",\n            description: \"lightning: ataque salta para oponentes proximos\",\n            cooldown: 5000,\n        },\n        lock: {\n            name: \"lock\",\n            flavor: \"Sempre considerei as ações dos homens como as melhores intérpretes dos seus pensamentos\",\n            description: \"freeze: paralisa oponentes por um tempo\",\n            cooldown: 8000,\n            size: 100,\n        },\n        pizza: {\n            name: \"pizza\",\n            flavor: \"Pizzaiolo tira 1 de ataque do dragão\",\n            description: \"fireball: ataque em area\",\n            cooldown: 6000,\n            size: 60,\n        },\n    },\n}\n\nexport default Rules","/*****************/\n/***** UTILS *****/\n/*****************/\nexport default {\n    BLOCK_SIZE: 20,\n    canvas: null,\n    context: null,\n\n    setCanvas() {\n        // get a reference to the canvas element\n        this.canvas = document.getElementById(\"canvas\");\n        // create a canvas context to draw stuff with\n        this.context = this.canvas.getContext(\"2d\");\n    },\n\n\n    randomNumber(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    clearCanvas() {\n        if (this.canvas && this.context) {\n            // Store the current transformation matrix\n            this.context.save();\n    \n            // Use the identity matrix while clearing the canvas\n            this.context.setTransform(1, 0, 0, 1, 0, 0);\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    \n            // Restore the transform\n            this.context.restore();\n        }\n    },\n\n    hexToRgb(hex) {\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n        hex = hex.replace(shorthandRegex, function(m, r, g, b) {\n            return r + r + g + g + b + b;\n        });\n\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        return result ? {\n            r: parseInt(result[1], 16),\n            g: parseInt(result[2], 16),\n            b: parseInt(result[3], 16)\n        } : null;\n    },\n\n    drawRect(width, height, x, y, fill = '', stroke = '', strokeWidth = 0, alpha = 1) {\n        this.context.beginPath()\n        this.context.rect(width, height, x, y);\n        if (fill) {\n            this.context.fillStyle = fill;\n            if (alpha < 1) {\n                const rgb = this.hexToRgb(this.context.fillStyle)\n                this.context.fillStyle = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`\n            }\n            this.context.fill();\n        }\n        if (stroke) {\n            this.context.lineWidth = strokeWidth\n            this.context.strokeStyle = stroke\n            if (alpha < 1) {\n                const rgb = this.hexToRgb(this.context.fillStyle)\n                this.context.strokeStyle = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`\n            }\n            this.context.stroke()\n        }\n    },\n\n    drawCircle(x, y, radius, fill = '', stroke = '', strokeWidth = 0, alpha = 1) {\n        this.context.beginPath()\n        this.context.arc(x, y, radius, 0, 2 * Math.PI, false)\n        if (fill) {\n            this.context.fillStyle = fill\n            if (alpha < 1) {\n                const rgb = this.hexToRgb(this.context.fillStyle)\n                this.context.fillStyle = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`\n            }\n            this.context.fill()\n        }\n        if (stroke) {\n            this.context.lineWidth = strokeWidth\n            this.context.strokeStyle = stroke\n            if (alpha < 1) {\n                const rgb = this.hexToRgb(this.context.strokeStyle)\n                this.context.strokeStyle = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`\n            }\n            this.context.stroke()\n        }\n    },\n\n    drawText(text, size, x, y, fill='black', alpha = 1) {\n        this.context.beginPath()\n        this.context.font = size + 'px verdana';\n        this.context.fillStyle = fill;\n        if (alpha < 1) {\n            const rgb = this.hexToRgb(this.context.fillStyle)\n            this.context.strokeStyle = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`\n        }\n        this.context.fillText(text, x, y);\n    },\n\n    calculateDistance(p1, p2) {\n        var a = p2.x - p1.x;\n        var b = p2.y - p1.y;\n\n        return Math.sqrt(a * a + b * b);\n    },\n\n    calculateVelocity({ vectorX, vectorY, speed }){\n        const length = Math.sqrt(\n            vectorX * vectorX +\n            vectorY * vectorY\n        )\n        return {\n            x: (vectorX / length) * speed,\n            y: (vectorY / length) * speed,\n        }\n    },\n\n    isSquareInsideCircle({squareX, squareY, size}, {circleX, circleY, radius}){\n        if (Math.pow((squareX - circleX), 2) + Math.pow((squareY - circleY), 2) < Math.pow(radius, 2)) return true\n        if (Math.pow((squareX + size - circleX), 2) + Math.pow((squareY - circleY), 2) < Math.pow(radius, 2)) return true\n        if (Math.pow((squareX - circleX), 2) + Math.pow((squareY + size - circleY), 2) < Math.pow(radius, 2)) return true\n        if (Math.pow((squareX + size - circleX), 2) + Math.pow((squareY + size - circleY), 2) < Math.pow(radius, 2)) return true\n        return false;\n    },\n\n    // Basic collision detection for rectangle intersection (NOTE: again, this would\n    // live inside the system itself)\n    doesIntersect(obj1, obj2) {\n        // Takes in two objects with position and size properties\n        //  obj1: player controlled position and size\n        //  obj2: object to check\n        //\n        var rect1 = {\n            x: obj1.position.x - obj1.size,\n            y: obj1.position.y - obj1.size,\n            height: obj1.size * 2,\n            width: obj1.size * 2\n        };\n        var rect2 = {\n            x: obj2.position.x - obj2.size,\n            y: obj2.position.y - obj2.size,\n            height: obj2.size * 2,\n            width: obj2.size * 2\n        };\n\n        return (rect1.x < rect2.x + rect2.width &&\n            rect1.x + rect1.width > rect2.x &&\n            rect1.y < rect2.y + rect2.height &&\n            rect1.height + rect1.y > rect2.y);\n    },\n}","/**********************/\n/***** COMPONENTS *****/\n/**********************/\nimport BLOCK_SIZE from '../core/utils'\n\nconst Components = {}\n\n// Health\n// --------------------------------------\nComponents.Health = function (value) {\n    value = value || 20;\n    this.value = value;\n    return this;\n};\nComponents.Health.prototype.name = 'health';\n// Player\n// --------------------------------------\nComponents.Player = function () {\n    this.playerControllable = true;\n    this.score = 0;\n    return this;\n};\nComponents.Player.prototype.name = 'player';\n// Enemy\n// --------------------------------------\nComponents.Enemy = function (params) {\n    params = params || {};\n    this.damage = params.damage;\n    this.dead = false;\n    return this;\n};\nComponents.Enemy.prototype.name = 'enemy';\n// Card\n// --------------------------------------\nComponents.Card = function ({ cid, cooldown }) {\n    this.cid = cid;\n    this.cooldown = cooldown;\n    this.lastTimestamp = Date.now();\n    return this;\n};\nComponents.Card.prototype.name = 'card';\n// CardCast\n// --------------------------------------\nComponents.CardCast = function ({ cid }) {\n    this.cid = cid;\n    this.casted = false;\n    this.createdTimestamp = Date.now();\n    return this;\n};\nComponents.CardCast.prototype.name = 'cardCast';\n// CardEffect\n// --------------------------------------\nComponents.CardEffect = function ({ cid, duration }) {\n    this.cid = cid;\n    this.duration = duration;\n    this.createdTimestamp = Date.now();\n    return this;\n};\nComponents.CardEffect.prototype.name = 'cardEffect';\n// Projectile\n// --------------------------------------\nComponents.Projectile = function (damage) {\n    this.damage = damage;\n    return this;\n};\nComponents.Projectile.prototype.name = 'projectile';\n// Particle\n// --------------------------------------\nComponents.Particle = function () {\n    return this;\n};\nComponents.Particle.prototype.name = 'particle';\n// Decay\n// --------------------------------------\nComponents.Decay = function (decay) {\n    this.decay = decay;\n    this.createdTimestamp = Date.now();\n    return this;\n}\nComponents.Decay.prototype.name = 'decay';\n// Velocity\n// --------------------------------------\nComponents.Velocity = function (params) {\n    params = params || {};\n    this.x = params.x;\n    this.y = params.y;\n    this.isMoving = true;\n    return this;\n};\nComponents.Velocity.prototype.name = 'velocity';\n// Target\n// --------------------------------------\nComponents.Target = function (params) {\n    params = params || {};\n    this.id = params.id;\n    this.damage = params.damage;\n    return this;\n};\nComponents.Target.prototype.name = 'target';\n// Shooting\n// --------------------------------------\nComponents.Shooting = function (params) {\n    params = params || {};\n    this.damage = params.damage;\n    this.cooldown = params.cooldown;\n    this.lastTimestamp = 0;\n    return this;\n};\nComponents.Shooting.prototype.name = 'shooting';\n// Casting\n// --------------------------------------\nComponents.Casting = function (params) {\n    params = params || {};\n    this.cooldown = params.cooldown;\n    this.lastTimestamp = 0;\n    return this;\n};\nComponents.Casting.prototype.name = 'casting';\n// Position\n// --------------------------------------\nComponents.Position = function (params) {\n    params = params || {};\n    this.x = params.x;\n    this.y = params.y;\n    return this;\n};\nComponents.Position.prototype.name = 'position';\n// Appearance \n// --------------------------------------\nComponents.Appearance = function (params) {\n    params = params || {};\n    this.shape = params.shape || 'square';\n    this.size = params.size || BLOCK_SIZE;\n    this.fill = params.fill;\n    this.stroke = params.stroke;\n    this.strokeWidth = params.strokeWidth;\n    this.alpha = params.alpha || 1;\n    return this;\n};\nComponents.Appearance.prototype.name = 'appearance';\n\nexport default Components","/************************/\n/***** COMPOSITIONS *****/\n/************************/\nimport Entity from '../core/entity'\nimport Rules from '../core/rules'\nimport State from '../core/state'\nimport Components from '../core/components'\nimport Utils from '../core/utils'\n\nconst Compositions = {}\n\nCompositions.createPlayer = function () {\n    const player = new Entity();\n    player.addComponent(new Components.Player());\n    player.addComponent(new Components.Health(20));\n    player.addComponent(new Components.Casting({\n        cooldown: 800,\n    }));\n    player.addComponent(new Components.Shooting({\n        damage: 5,\n        cooldown: 325,\n    }));\n    player.addComponent(new Components.Position({\n        x: Utils.canvas.width / 2 - Utils.BLOCK_SIZE / 2,\n        y: Utils.canvas.height / 2 - Utils.BLOCK_SIZE / 2,\n    }));\n    player.addComponent(new Components.Appearance({\n        shape: 'square',\n        size: Utils.BLOCK_SIZE,\n        fill: 'red',\n        stroke: 'black',\n        strokeWidth: 2,\n    }));\n    State.entities[player.id] = player;\n    return player;\n}\n\n\nCompositions.createEnemy = function (player, isBoss=false) {\n    const enemy = new Entity();\n    enemy.addComponent(new Components.Health(isBoss ? 15 : 5));\n    enemy.addComponent(new Components.Enemy({ damage: isBoss ? 5 : 1 }));\n\n    const sides = ['TOP', 'LEFT', 'BOTTOM', 'RIGHT'];\n    let enemyPosition;\n    switch (sides[Utils.randomNumber(0, 3)]) {\n        case 'TOP':\n            enemyPosition = new Components.Position({\n                x: 0,\n                y: Utils.randomNumber(0, Utils.canvas.height),\n            })\n            break;\n        case 'LEFT':\n            enemyPosition = new Components.Position({\n                x: Utils.randomNumber(0, Utils.canvas.width),\n                y: 0,\n            })\n            break;\n        case 'BOTTOM':\n            enemyPosition = new Components.Position({\n                x: Utils.canvas.width,\n                y: Utils.randomNumber(0, Utils.canvas.height),\n            })\n            break;\n        case 'RIGHT':\n            enemyPosition = new Components.Position({\n                x: Utils.randomNumber(0, Utils.canvas.width),\n                y: Utils.canvas.height,\n            })\n            break;\n        default:\n        // code block\n    }\n    enemy.addComponent(enemyPosition);\n\n    const baseSpeed = 1.2;\n    const length_x = player.components.position.x - enemy.components.position.x;\n    const length_y = player.components.position.y - enemy.components.position.y;\n    const length = Math.sqrt(\n        length_x * length_x +\n        length_y * length_y\n    );\n    enemy.addComponent(new Components.Velocity({\n        x: (length_x / length) * baseSpeed,\n        y: (length_y / length) * baseSpeed,\n    }));\n\n    enemy.addComponent(new Components.Appearance({\n        shape: 'square',\n        size: isBoss ? Utils.BLOCK_SIZE + 10 : Utils.BLOCK_SIZE - 5,\n        fill: isBoss ? 'deepskyblue' : 'skyblue',\n        stroke: 'black',\n        strokeWidth: 2,\n    }));\n\n    State.entities[enemy.id] = enemy;\n}\n\n\nCompositions.createProjectile = function (player, targetEnemy) {\n    const projectile = new Entity();\n    projectile.addComponent(new Components.Projectile(player.components.shooting.damage));\n    projectile.addComponent(new Components.Target({\n        id: targetEnemy.id,\n        damage: player.components.shooting.damage,\n    }));\n    projectile.addComponent(new Components.Position({\n        x: player.components.position.x + Utils.BLOCK_SIZE / 2,\n        y: player.components.position.y + Utils.BLOCK_SIZE / 2,\n    }));\n    projectile.addComponent(new Components.Appearance({\n        shape: 'circle',\n        size: 3,\n        fill: 'yellow',\n        stroke: 'red',\n        strokeWidth: 1,\n    }));\n\n    const length_x = targetEnemy.components.position.x - projectile.components.position.x;\n    const length_y = targetEnemy.components.position.y - projectile.components.position.y;\n    const length = Math.sqrt(\n        length_x * length_x +\n        length_y * length_y\n    );\n    projectile.addComponent(new Components.Velocity({\n        x: (length_x / length) * 2,\n        y: (length_y / length) * 2,\n    }));\n\n    State.entities[projectile.id] = projectile;\n}\n\n\nCompositions.createDeathParticles = function (position) {\n    for (let i=0; i < Utils.randomNumber(6,9); i++) {\n        const particle = new Entity();\n        particle.addComponent(new Components.Particle());\n        particle.addComponent(new Components.Decay(700))\n        particle.addComponent(new Components.Position({x: position.x, y: position.y}));\n\n        const length_x = position.x * Utils.randomNumber(-1,1) * (Utils.randomNumber(1,9)/10);\n        const length_y = position.y * Utils.randomNumber(-1,1) * (Utils.randomNumber(1,9)/10);\n        const length = Math.sqrt(\n            length_x * length_x +\n            length_y * length_y\n        );\n        particle.addComponent(new Components.Velocity({\n            x: (length_x / length) * 0.4,\n            y: (length_y / length) * 0.4,\n        }));\n\n        particle.addComponent(new Components.Appearance({\n            shape: 'circle',\n            size: 4,\n            stroke: 'grey',\n            strokeWidth: 2,\n        }));\n        State.entities[particle.id] = particle;\n    }\n}\n\n\nCompositions.createCards = function (){\n    const cardsRule = State.playerCIDs.map((id) => Rules.Cards[id])\n    for (const cardRule of cardsRule) {\n        const card = new Entity();\n        card.addComponent(new Components.Card({\n            cid: cardRule.name,\n            cooldown: cardRule.cooldown,\n        }));\n        State.entities[card.id] = card;\n    }\n}\n\n\nCompositions.createCardCast = function (card){\n    const cardCast = new Entity();\n    cardCast.addComponent(new Components.CardCast({\n        cid: card.cid,\n    }));\n    cardCast.addComponent(new Components.Position({\n        x: State.player.components.position.x + Utils.BLOCK_SIZE/2,\n        y: State.player.components.position.y - Utils.BLOCK_SIZE,\n    }));\n    const velocity = Utils.calculateVelocity({\n        vectorX: 0,\n        vectorY: -100,\n        speed: 0.4,\n    })\n    cardCast.addComponent(new Components.Velocity(velocity));\n    cardCast.addComponent(new Components.Decay(1500));\n    cardCast.addComponent(new Components.Appearance({\n        shape: 'text',\n        size: 18,\n        fill: 'green',\n    }));\n    State.entities[cardCast.id] = cardCast;\n\n    return cardCast\n}\n\n\nCompositions.createCardEffect = function ({ cid, x, y, duration }) {\n    const cardEffect = new Entity();\n\n    if (cid == 'pizza') {\n        cardEffect.addComponent(new Components.CardEffect({ cid, duration }));\n        cardEffect.addComponent(new Components.Position({ x, y }));    \n        cardEffect.addComponent(new Components.Appearance({\n            shape: 'circle',\n            size: 1,\n            fill: 'green',\n            stroke: 'green',\n            strokeWidth: 4,\n            alpha: 0.5,\n        }));\n    }\n\n    if (cid == 'lock') {\n        cardEffect.addComponent(new Components.CardEffect({ cid, duration }));\n        cardEffect.addComponent(new Components.Position({ x: x + Utils.BLOCK_SIZE/2, y: y + Utils.BLOCK_SIZE/2 }));\n        cardEffect.addComponent(new Components.Appearance({\n            shape: 'circle',\n            size: Rules.Cards.lock.size,\n            fill: 'lightCyan',\n            stroke: 'lightCyan',\n            strokeWidth: 4,\n            alpha: 0.5,\n        }));\n    }\n\n    State.entities[cardEffect.id] = cardEffect;\n\n    return cardEffect\n}\n\n\nexport default Compositions","/*******************/\n/***** Systems *****/\n/*******************/\nimport Components from '../core/components'\nimport Compositions from '../core/compositions'\nimport State from '../core/state'\nimport Utils from '../core/utils'\nimport Rules from '../core/rules'\n\n\nconst Systems = {}\n\n// Render\n// --------------------------------------\nSystems.render = function systemRender(entities) {\n    // This happens each tick, so we need to clear out the previous rendered\n    // state\n    Utils.clearCanvas();\n\n    const renderesEntities = Object.values(entities).filter(\n            (e) => e.components.appearance\n        ).map((e) => e.id);\n    for (const entityId of renderesEntities) {\n        const curEntity = entities[entityId];\n\n        if (curEntity.components.appearance && curEntity.components.health) {\n            Utils.drawText(\n                curEntity.components.health.value,\n                10,\n                curEntity.components.position.x + 1,\n                curEntity.components.position.y - 4\n            );\n        }\n\n        if (curEntity.components.appearance && curEntity.components.cardCast) {\n            Utils.drawText(\n                curEntity.components.cardCast.cid,\n                curEntity.components.appearance.size,\n                curEntity.components.position.x,\n                curEntity.components.position.y,\n                curEntity.components.appearance.fill,\n                curEntity.components.appearance.alpha,\n            );\n        }\n\n        if (curEntity.components.appearance.shape == 'square') {\n            Utils.drawRect(\n                curEntity.components.position.x,\n                curEntity.components.position.y,\n                curEntity.components.appearance.size,\n                curEntity.components.appearance.size,\n                curEntity.components.appearance.fill,\n                curEntity.components.appearance.stroke,\n                curEntity.components.appearance.strokeWidth,\n                curEntity.components.appearance.alpha,\n            )\n        }\n\n        if (curEntity.components.appearance.shape == 'circle') {\n            Utils.drawCircle(\n                curEntity.components.position.x,\n                curEntity.components.position.y,\n                curEntity.components.appearance.size,\n                curEntity.components.appearance.fill,\n                curEntity.components.appearance.stroke,\n                curEntity.components.appearance.strokeWidth,\n                curEntity.components.appearance.alpha,\n            )\n        }\n    }\n\n    // SCORE\n    Utils.drawText(\n        'SCORE: ' + State.player.components.player.score,\n        18, Utils.canvas.width - 135, 20\n    );\n\n    if (State.isGameOver) {\n        Utils.drawText(\n            'GAME OVER',\n            32, Utils.canvas.width / 2 - 100, Utils.canvas.height / 2 - 30\n        );\n    }\n};\n// Physics\n// --------------------------------------\nSystems.physics = function systemPhysics(entities) {\n    const physicsEntities = Object.values(entities).filter(\n            (e) => e.components.position && e.components.velocity && e.components.velocity.isMoving\n        ).map((e) => e.id);\n    for (const entityId of physicsEntities) {\n        const curEntity = entities[entityId];\n\n        if (curEntity.components.velocity) {\n            curEntity.components.position.x += curEntity.components.velocity.x;\n            curEntity.components.position.y += curEntity.components.velocity.y;\n        }\n\n        if (curEntity.components.position.x < 0 ||\n            curEntity.components.position.x > Utils.canvas.width ||\n            curEntity.components.position.y < 0 ||\n            curEntity.components.position.y > Utils.canvas.height) {\n            delete entities[entityId];\n        }\n    }\n};\n// Debug\n// --------------------------------------\nSystems.debug = function systemDebug() {\n    if (!State.lastDebugTimestamp) {\n        State.debugLastCasted = Date.now();\n    }\n    const nowTimestamp = Date.now();\n    if (nowTimestamp - State.lastDebugTimestamp > 2000) {\n        console.log('debug')\n        State.lastDebugTimestamp = nowTimestamp;\n        const hasComponents = ({velocity, position}) => velocity && position;\n        const entities = Object.values(State.entities).filter((e) => hasComponents(e.components));\n        console.log(entities)\n    }\n};\n// Collision\n// --------------------------------------\nSystems.collision = function systemCollision(player, entities) {\n    const enemies = Object.values(entities).filter((e) => { if (e.components.enemy) return e; });\n    const projectiles = Object.values(entities).filter((e) => { if (e.components.projectile) return e; });\n    for (const enemy of enemies) {\n\n        for (const projectile of projectiles) {\n            if (Utils.doesIntersect(\n                {\n                    position: enemy.components.position,\n                    size: enemy.components.appearance.size\n                },\n                {\n                    position: projectile.components.position,\n                    size: projectile.components.appearance.size\n                })) {\n                enemy.components.health.value -= projectile.components.projectile.damage;\n                delete entities[projectile.id];\n                if (enemy.components.health.value <= 0) {\n                    player.components.player.score += 10;\n                    enemy.components.enemy.dead = true;\n                }\n            }\n        }\n\n        if (Utils.doesIntersect(\n            {\n                position: enemy.components.position,\n                size: enemy.components.appearance.size\n            },\n            {\n                position: player.components.position,\n                size: player.components.appearance.size\n            })) {\n            player.components.health.value -= enemy.components.enemy.damage;\n            delete entities[enemy.id];\n            if (player.components.health.value <= 0) {\n                player.components.health.value = 0\n                State.isGameOver = true;\n            }\n        }\n    }\n};\n// Decay\n// --------------------------------------\nSystems.decay = function systemDecay(entities) {\n    let nowInMilliseconds = Date.now();\n    for (const entityId in entities) {\n        const curEntity = entities[entityId];\n\n        if (curEntity.components.decay) {\n            if (curEntity.components.decay.decay + curEntity.components.decay.createdTimestamp < nowInMilliseconds) {\n                delete entities[entityId];\n            } else if (curEntity.components.appearance) {\n                const pastTime = nowInMilliseconds - curEntity.components.decay.createdTimestamp;\n                const alpha = (curEntity.components.decay.decay - pastTime) / curEntity.components.decay.decay;\n                if (!curEntity.components.appearance.alpha || curEntity.components.appearance.alpha > alpha) {\n                    curEntity.components.appearance.alpha = alpha;\n                }\n            }\n        }\n\n        if (curEntity.components.enemy && curEntity.components.enemy.dead) {\n            Compositions.createDeathParticles(curEntity.components.position);\n            delete entities[curEntity.id];\n        }\n    }\n}\n// Shooting\n// --------------------------------------\nSystems.shooting = function Systemshooting(player, entities) {\n    let nowInMilliseconds = Date.now();\n    if (player.components.shooting.lastTimestamp + player.components.shooting.cooldown < nowInMilliseconds) {\n        const enemies = Object.values(entities).filter((e) => { if (e.components.enemy) return e; });\n        // const targetEnemy = enemies[0]; //TODO\n        const targetEnemy = enemies.map((enemy) => {\n            return {\n                ...enemy,\n                distance: Utils.calculateDistance(\n                    {\n                        x: player.components.position.x,\n                        y: player.components.position.y\n                    }, {\n                        x: enemy.components.position.x,\n                        y: enemy.components.position.y\n                    }\n                )\n            }\n        }).sort(\n            (e1, e2) => e1.distance - e2.distance\n        ).find((enemy) => {\n            const targetsOnEnemy = Object.values(entities).filter((e) => e.components.target && enemy.id == e.components.target.id);\n            const totalDamage = targetsOnEnemy.reduce((parcialDamage, e) => parcialDamage + e.components.target.damage, 0);\n            return totalDamage < enemy.components.health.value;\n        });\n\n        Compositions.createProjectile(player, targetEnemy)\n\n        player.components.shooting.lastTimestamp = nowInMilliseconds;\n    }\n};\n// Effects\n// --------------------------------------\nSystems.effects = function systemEffects() {\n    const cardCast = Object.values(State.entities).find((e) => e.components.cardCast && !e.components.cardCast.casted);\n    \n    if (cardCast) {\n        cardCast.components.cardCast.casted = true\n\n        if (cardCast.components.cardCast.cid == 'pizza') {\n            console.log('pizza')\n\n            const enemies = Object.values(State.entities).filter((e) => { if (e.components.enemy) return e; });\n            const targetEnemy = enemies.map((enemy) => {\n                return {\n                    ...enemy,\n                    distance: Utils.calculateDistance(\n                        {\n                            x: State.player.components.position.x,\n                            y: State.player.components.position.y\n                        }, {\n                            x: enemy.components.position.x,\n                            y: enemy.components.position.y\n                        }\n                    )\n                }\n            }).sort(\n                (e1, e2) => e1.distance - e2.distance\n            ).find((enemy) => enemy.distance > 150)\n\n            Compositions.createCardEffect({\n                cid: cardCast.components.cardCast.cid,\n                x: targetEnemy.components.position.x,\n                y: targetEnemy.components.position.y,\n                duration: 1000,\n            })\n        }\n\n        if (cardCast.components.cardCast.cid == 'lock') {\n            console.log('lock')\n\n            Compositions.createCardEffect({\n                cid: cardCast.components.cardCast.cid,\n                x: State.player.components.position.x,\n                y: State.player.components.position.y,\n                duration: 5000,\n            })\n        }\n    }\n\n    const cardEffects = Object.values(State.entities).filter((e) => e.components.cardEffect)\n    for (const cardEffect of cardEffects) {\n        let nowInMilliseconds = Date.now();\n\n        if (cardEffect.components.cardEffect.createdTimestamp + cardEffect.components.cardEffect.duration > nowInMilliseconds) {\n            const pastTime = nowInMilliseconds - cardEffect.components.cardEffect.createdTimestamp\n\n            if (cardEffect.components.cardEffect.cid == 'pizza') {\n                if (pastTime > 0) {\n                    const durationPercent = (1 - ((cardEffect.components.cardEffect.duration - pastTime) / cardEffect.components.cardEffect.duration))\n                    if (durationPercent < 0.2) {\n                        const size = Rules.Cards.pizza.size * durationPercent * 5\n                        cardEffect.components.appearance.size = size\n                    } else {\n                        cardEffect.addComponent(new Components.Decay(cardEffect.components.cardEffect.duration * durationPercent))\n    \n                        const enemies = Object.values(State.entities).filter((e) => { if (e.components.enemy) return e; });\n                        const enemiesInArea = enemies.filter((e) => Utils.isSquareInsideCircle({\n                            squareX: e.components.position.x,\n                            squareY: e.components.position.y,\n                            size: e.components.appearance.size\n                        }, {\n                            circleX: cardEffect.components.position.x,\n                            circleY: cardEffect.components.position.y,\n                            radius: cardEffect.components.appearance.size\n                        }))\n                        \n                        for (const enemy of enemiesInArea) {\n                            State.player.components.player.score += 10;\n                            enemy.components.enemy.dead = true;\n                        }\n                    }\n                }\n            }\n\n            if (cardEffect.components.cardEffect.cid == 'lock') {\n                if (pastTime > 0) {\n                    const durationPercent = (1 - ((cardEffect.components.cardEffect.duration - pastTime) / cardEffect.components.cardEffect.duration))\n\n                    const enemies = Object.values(State.entities).filter((e) => { if (e.components.enemy) return e; });\n                    const enemiesInArea = enemies.filter((e) => Utils.isSquareInsideCircle({\n                        squareX: e.components.position.x,\n                        squareY: e.components.position.y,\n                        size: e.components.appearance.size\n                    }, {\n                        circleX: cardEffect.components.position.x,\n                        circleY: cardEffect.components.position.y,\n                        radius: cardEffect.components.appearance.size\n                    }))\n                    \n                    if (durationPercent < 0.99) {\n                        for (const enemy of enemiesInArea) {\n                            enemy.components.velocity.isMoving = false;\n                        }\n\n                    } else {\n                        cardEffect.addComponent(new Components.Decay(cardEffect.components.cardEffect.duration * durationPercent))\n    \n                        for (const enemy of enemiesInArea) {\n                            enemy.components.velocity.isMoving = true;\n                        }\n                    }\n                }\n            }\n\n        } else {\n            delete State.entities[cardEffect.id]\n        }\n    }\n};\n// Casting\n// --------------------------------------\nSystems.casting = function systemCasting() {\n    const cards = Object.values(State.entities).filter((e) => { if (e.components.card) return e; });\n    let nowInMilliseconds = Date.now();\n    const card = cards.filter(\n            (e) => e.components.card.lastTimestamp + e.components.card.cooldown < nowInMilliseconds\n        ).sort((e1, e2) => e2.lastTimestamp - e1.lastTimestamp)[0];\n\n    if (card && State.player.components.casting.lastTimestamp + State.player.components.casting.cooldown < nowInMilliseconds) {\n        State.player.components.casting.lastTimestamp = nowInMilliseconds\n\n        card.components.card.lastTimestamp = nowInMilliseconds\n\n        Compositions.createCardCast(card.components.card)\n    }\n\n\n};\n// Populate\n// --------------------------------------\nSystems.populate = function systemPopulate() {\n    const enemies = Object.values(State.entities).filter((e) => { if (e.components.enemy) return e; });\n    if (enemies.length < State.maxEnemies) {\n        const isBoss = Utils.randomNumber(1, 10) == 10;\n        Compositions.createEnemy(State.player, isBoss)\n    }\n};\n\nexport default Systems","/*********************/\n/***** MAIN GAME *****/\n/*********************/\nimport State from '../core/state'\nimport Compositions from '../core/compositions'\nimport Systems from '../core/systems'\nimport Utils from '../core/utils'\n\n// For tutorial purposes, we'll set up a global object containing \n// references to all objects.\nconst Game = {\n    gameLoop() {\n        Systems.debug();\n\n        // GAME\n        Systems.populate();\n        Systems.effects();\n        Systems.casting();\n        Systems.shooting(State.player, State.entities);\n        Systems.decay(State.entities);\n\n        // ENGINE\n        Systems.physics(State.entities);\n        Systems.collision(State.player, State.entities);\n        Systems.render(State.entities);\n    },\n    start() {\n        Utils.setCanvas();\n        Utils.clearCanvas();\n\n        State.player = Compositions.createPlayer();\n        Compositions.createCards();\n\n        clearInterval(State.interval);\n        State.interval = setInterval(function () {\n            if (State.isStarted && !State.isPause && !State.isGameOver) Game.gameLoop();\n        }, 20)\n\n        State.isStarted = true;\n    },\n    pause() {\n        if (!State.isStarted) return;\n        State.isPause = !State.isPause;\n    },\n    reset() {\n        State.isStarted = false;\n        State.isPause = false;\n        State.isGameOver = false;\n\n        Utils.clearCanvas();\n        State.entities = {};\n    },\n};\n\nexport default Game\n","import Game from './core/game'\nimport State from './core/state'\nimport Compositions from './core/compositions'\nimport Utils from './core/utils'\nimport Systems from './core/systems'\n\n\nconst ECS = {\n    Game,\n    State,\n    Compositions,\n    Utils,\n    Systems,\n}\n\nwindow.ECS = ECS;\nexport default ECS","import { render } from \"./Battle.vue?vue&type=template&id=1fe5d07e&scoped=true\"\nimport script from \"./Battle.vue?vue&type=script&lang=js\"\nexport * from \"./Battle.vue?vue&type=script&lang=js\"\n\nimport \"./Battle.vue?vue&type=style&index=0&id=1fe5d07e&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1fe5d07e\"]])\n\nexport default __exports__","<!-- Use preprocessors via the lang attribute! e.g. <template lang=\"pug\"> -->\n<template>\n    <div id=\"shop\">\n        <button @click=\"battle\">BATTLE</button>\n        <ShopBox></ShopBox>\n        <TeamCards></TeamCards>\n        <LogBox></LogBox>\n        <EnemyContainer></EnemyContainer>\n    </div>\n</template>\n\n<script>\nimport { mapState } from \"vuex\";\nimport TeamCards from \"@/components/TeamCards.vue\";\nimport ShopBox from \"@/components/ShopBox.vue\";\nimport LogBox from \"@/components/LogBox.vue\";\nimport EnemyContainer from \"@/components/EnemyContainer.vue\";\n\nexport default {\n  components: {\n    TeamCards,\n    ShopBox,\n    LogBox,\n    EnemyContainer\n  },\n  computed: {\n    ...mapState(\"game\", [\"isLoading\"]),\n  },\n  created() {\n    this.$store.dispatch(\"game/getFilosofos\");\n    this.$store.dispatch(\"game/mainLoop\");\n  },\n  methods: {\n    battle() {\n      this.$router.push('battle')\n    }\n  }\n};\n</script>\n\n<!-- Use preprocessors via the lang attribute! e.g. <style lang=\"scss\"> -->\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n#dragonLair,\n#time,\n#msgs {\n  border: 2px solid;\n}\n</style>\n","<template>\n  <div id=\"time\">\n    <div v-if=\"time.length > 0\">\n      <p>Vida: {{ this.vida }}</p>\n      <p>Ataque: {{ this.ataque }}</p>\n      <div>\n        <img\n          v-bind:alt=\"c.hero\"\n          class=\"center-cropped\"\n          :src=\"getImgUrl(c.hero)\"\n          @click=\"venderFilosofo(index)\"\n          v-for=\"(c, index) in time\"\n          :key=\"index\"\n        />\n      </div>\n      <br /><br />\n    </div>\n    <div v-else>\n      <p>Não tem ninguem no seu time ainda</p>\n      <br /><br /><br /><br />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"TeamCards\",\n  computed: {\n    ...mapState(\"game\", [\"time\", \"vida\", \"ataque\"]),\n  },\n  methods: {\n    ...mapMutations(\"game\", [\"venderFilosofo\"]),\n    getImgUrl(pic) {\n      return require(\"../assets/\" + pic.substring(0, pic.length - 4) + \".png\");\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.center-cropped {\n  object-fit: contain;\n  object-position: center;\n  height: 100px;\n  width: 100px;\n  border: solid black 2px;\n  padding: 2px;\n  margin: 4px;\n}\n.center-cropped:hover {\n  border-color: red;\n}\n</style>\n","import { render } from \"./TeamCards.vue?vue&type=template&id=7579b1d5&scoped=true\"\nimport script from \"./TeamCards.vue?vue&type=script&lang=js\"\nexport * from \"./TeamCards.vue?vue&type=script&lang=js\"\n\nimport \"./TeamCards.vue?vue&type=style&index=0&id=7579b1d5&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7579b1d5\"]])\n\nexport default __exports__","<template>\n  <div id=\"shop\">\n    <button\n      v-for=\"(c, index) in filosofos\"\n      :key=\"index\"\n      :id=\"c.hero\"\n      @click=\"comprarFilosofo(c)\"\n    >\n      Comprar {{ c.hero }}\n    </button>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"ShopBox\",\n  computed: {\n    ...mapState(\"game\", [\"filosofos\"]),\n  },\n  methods: {\n    ...mapMutations(\"game\", [\"comprarFilosofo\"]),\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\na,\nbutton {\n  color: #4fc08d;\n}\n\nbutton {\n  background: none;\n  border: solid 1px;\n  border-radius: 2em;\n  font: inherit;\n  padding: 0.75em 2em;\n}\n</style>\n","import { render } from \"./ShopBox.vue?vue&type=template&id=4a2c327a&scoped=true\"\nimport script from \"./ShopBox.vue?vue&type=script&lang=js\"\nexport * from \"./ShopBox.vue?vue&type=script&lang=js\"\n\nimport \"./ShopBox.vue?vue&type=style&index=0&id=4a2c327a&scoped=true&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4a2c327a\"]])\n\nexport default __exports__","<template>\n  <div id=\"msgs\">\n    <div v-if=\"msgs.length > 0\">\n      <p v-for=\"(msg, index) in msgs\" :key=\"index\">{{ msg }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: \"ShopBox\",\n  computed: {\n    ...mapGetters({\n      msgs: \"game/getMsg\",\n    }),\n  },\n};\n</script>\n","import { render } from \"./LogBox.vue?vue&type=template&id=2d3a83c4\"\nimport script from \"./LogBox.vue?vue&type=script&lang=js\"\nexport * from \"./LogBox.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div id=\"dragonLair\">\n    <div v-if=\"vidaDragao > 0\">\n      <p>DRAGAO!!!!!</p>\n      <p>{{ this.vidaDragao }}</p>\n      <img alt=\"graaaaurrrr\" src=\"../assets/dragao.png\" />\n    </div>\n    <div v-else>\n      <div v-if=\"cabou == 0\">\n        <p>Daqui a pouco o dragão chega</p>\n        <br />\n        <button id=\"dragao\" @click=\"chamarDragao()\">CHAMA O DRAGÃO</button>\n      </div>\n      <div v-else>\n        <button @click=\"recomecar()\">recomeçar</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations } from \"vuex\";\n\nexport default {\n  name: \"ShopBox\",\n  computed: {\n    ...mapState(\"game\", [\"vidaDragao\", \"cabou\"]),\n  },\n  methods: {\n    ...mapMutations(\"game\", [\"recomecar\", \"chamarDragao\"]),\n  },\n};\n</script>\n","import { render } from \"./EnemyContainer.vue?vue&type=template&id=6f6ae47e\"\nimport script from \"./EnemyContainer.vue?vue&type=script&lang=js\"\nexport * from \"./EnemyContainer.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Shop.vue?vue&type=template&id=3889a610\"\nimport script from \"./Shop.vue?vue&type=script&lang=js\"\nexport * from \"./Shop.vue?vue&type=script&lang=js\"\n\nimport \"./Shop.vue?vue&type=style&index=0&id=3889a610&lang=css\"\n\nimport exportComponent from \"/app/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","var map = {\n\t\"./Locke.png\": 3864,\n\t\"./Lula.png\": 1636,\n\t\"./Marx.png\": 7969,\n\t\"./Pizzaiolo.png\": 9593,\n\t\"./dragao.png\": 4325,\n\t\"./logo.png\": 6949\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 2715;"],"names":["class","_createElementVNode","id","width","height","_createElementBlock","_hoisted_2","_hoisted_3","ref","onClick","$options","State","isStarted","isPause","isGameOver","player","playerCIDs","interval","maxEnemies","entities","autoStart","lastDebugTimestamp","Entity","this","Date","toString","Math","random","prototype","_count","components","addComponent","component","name","removeComponent","componentName","print","console","log","JSON","stringify","Rules","Cards","unite","flavor","description","cooldown","squid","lock","size","pizza","BLOCK_SIZE","canvas","context","setCanvas","document","getElementById","getContext","randomNumber","min","max","ceil","floor","clearCanvas","save","setTransform","clearRect","restore","hexToRgb","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","drawRect","x","y","fill","stroke","strokeWidth","alpha","beginPath","rect","fillStyle","rgb","lineWidth","strokeStyle","drawCircle","radius","arc","PI","drawText","text","font","fillText","calculateDistance","p1","p2","a","sqrt","calculateVelocity","vectorX","vectorY","speed","length","isSquareInsideCircle","squareX","squareY","circleX","circleY","pow","doesIntersect","obj1","obj2","rect1","position","rect2","Components","value","Health","Player","playerControllable","score","Enemy","params","damage","dead","Card","cid","lastTimestamp","now","CardCast","casted","createdTimestamp","CardEffect","duration","Projectile","Particle","Decay","decay","Velocity","isMoving","Target","Shooting","Casting","Position","Appearance","shape","Compositions","Utils","isBoss","enemy","sides","enemyPosition","baseSpeed","length_x","length_y","targetEnemy","projectile","shooting","i","particle","cardsRule","cardRule","card","cardCast","velocity","cardEffect","Systems","renderesEntities","Object","values","filter","e","appearance","map","entityId","curEntity","health","physicsEntities","nowTimestamp","hasComponents","enemies","projectiles","nowInMilliseconds","pastTime","distance","sort","e1","e2","find","targetsOnEnemy","target","totalDamage","reduce","parcialDamage","cardEffects","durationPercent","enemiesInArea","cards","Game","gameLoop","start","clearInterval","setInterval","pause","reset","ECS","window","mounted","time","$refs","click","computed","mapState","methods","__exports__","render","_createVNode","_component_ShopBox","_component_TeamCards","_component_LogBox","_component_EnemyContainer","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_ctx","_toDisplayString","vida","ataque","_Fragment","_renderList","c","index","alt","hero","src","key","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_12","mapMutations","getImgUrl","pic","require","substring","msg","mapGetters","msgs","_imports_0","vidaDragao","TeamCards","ShopBox","LogBox","EnemyContainer","created","$store","dispatch","battle","$router","push","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","keys","resolve","module","exports"],"sourceRoot":""}